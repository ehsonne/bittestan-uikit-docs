import{_ as s,c as n,o as a,a as e}from"./app-Cm3qpj-w.js";const o={},t=e(`<h1 id="color-mode-scss-documentation" tabindex="-1"><a class="header-anchor" href="#color-mode-scss-documentation"><span><code>color-mode.scss</code> Documentation</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <code>color-mode.scss</code> file provides a mixin for handling color modes, such as light and dark themes. It allows you to apply styles based on the user&#39;s color scheme preference or a specific data attribute.</p><h2 id="mixins" tabindex="-1"><a class="header-anchor" href="#mixins"><span>Mixins</span></a></h2><h3 id="color-mode-mode-light-root-false" tabindex="-1"><a class="header-anchor" href="#color-mode-mode-light-root-false"><span><code>color-mode($mode: light, $root: false)</code></span></a></h3><p>Applies styles based on the user&#39;s color scheme preference or a specific data attribute for color mode.</p><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@mixin</span> <span class="token function">color-mode</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$mode</span></span><span class="token punctuation">:</span> light<span class="token punctuation">,</span> <span class="token property"><span class="token variable">$root</span></span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$color-mode-type</span> == &quot;media-query&quot; </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$root</span> == true </span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> <span class="token variable">$mode</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token selector">:root </span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">@content</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">@else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> <span class="token variable">$mode</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">@content</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">@else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token selector">[data-bs-theme=&quot;<span class="token variable">#{$mode}</span>&quot;] </span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">@content</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters:</strong></p><ul><li><code>$mode</code>: The color mode to apply. Options are <code>light</code> and <code>dark</code>. Defaults to <code>light</code>.</li><li><code>$root</code>: A boolean flag indicating whether to apply styles to the <code>:root</code> element. Defaults to <code>false</code>.</li></ul><p><strong>Usage Examples:</strong></p><ol><li><p><strong>Applying Styles Based on User&#39;s Color Scheme Preference:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@include</span> <span class="token function">color-mode</span><span class="token punctuation">(</span>dark<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will apply dark mode styles when the user&#39;s system preference is set to dark mode.</p></li><li><p><strong>Applying Styles to <code>:root</code> Element for User&#39;s Color Scheme Preference:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@include</span> <span class="token function">color-mode</span><span class="token punctuation">(</span>dark<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">--background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--text-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will set CSS variables for dark mode when the user&#39;s system preference is set to dark mode.</p></li><li><p><strong>Applying Styles Based on a Specific Data Attribute:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@include</span> <span class="token function">color-mode</span><span class="token punctuation">(</span>dark<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will apply dark mode styles to elements with a data attribute <code>data-bs-theme=&quot;dark&quot;</code>.</p></li></ol><h2 id="variables" tabindex="-1"><a class="header-anchor" href="#variables"><span>Variables</span></a></h2><ul><li><code>$color-mode-type</code>: Determines whether to use media queries or data attributes. Options are <code>&quot;media-query&quot;</code> and <code>&quot;data-attribute&quot;</code>. This variable should be set globally in your project.</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><ul><li>Ensure that <code>$color-mode-type</code> is correctly set to either <code>&quot;media-query&quot;</code> or <code>&quot;data-attribute&quot;</code> based on your preference.</li><li>The mixin assumes that color mode switching is either based on media queries for user preferences or a data attribute on the HTML elements. Adjust as necessary for your implementation.</li></ul>`,16),l=[t];function p(i,c){return a(),n("div",null,l)}const d=s(o,[["render",p],["__file","color-mode.html.vue"]]),u=JSON.parse('{"path":"/mixins/color-mode.html","title":"color-mode.scss Documentation","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Mixins","slug":"mixins","link":"#mixins","children":[{"level":3,"title":"color-mode($mode: light, $root: false)","slug":"color-mode-mode-light-root-false","link":"#color-mode-mode-light-root-false","children":[]}]},{"level":2,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":2,"title":"Notes","slug":"notes","link":"#notes","children":[]}],"git":{"updatedTime":1723029969000,"contributors":[{"name":"Ehsan","email":"ehsan.k93@gmail.com","commits":1}]},"filePathRelative":"mixins/color-mode.md"}');export{d as comp,u as data};
