import{_ as e,c as o,o as t,a as d}from"./app-Cm3qpj-w.js";const n={},i=d('<h4 id="dropdown-wrapper-and-toggle" tabindex="-1"><a class="header-anchor" href="#dropdown-wrapper-and-toggle"><span><strong>Dropdown Wrapper and Toggle</strong></span></a></h4><ul><li><strong><code>.bt-dropup</code>, <code>.bt-dropend</code>, <code>.bt-dropdown</code>, <code>.bt-dropstart</code>, <code>.bt-dropup-center</code>, <code>.bt-dropdown-center</code></strong>: <ul><li>These classes set the position of the dropdown container relative to its parent, allowing for different dropdown directions (up, down, left, right, centered).</li></ul></li><li><strong><code>.bt-dropdown-toggle</code></strong>: <ul><li>This class is used for the element that triggers the dropdown. It includes a caret icon by default, which is generated using the <code>caret()</code> mixin.</li></ul></li></ul><h4 id="dropdown-menu-styling" tabindex="-1"><a class="header-anchor" href="#dropdown-menu-styling"><span><strong>Dropdown Menu Styling</strong></span></a></h4><ul><li><strong><code>.bt-dropdown-menu</code></strong>: <ul><li>This class handles the styling for the dropdown menu itself.</li><li>It uses CSS custom properties (variables) for various attributes like padding, border-radius, box-shadow, and colors, making it highly customizable.</li><li>The <code>rfs()</code> mixin is used to make the font size responsive.</li><li>The dropdown is positioned absolutely and initially hidden (<code>display: none</code>), but it becomes visible (<code>display: block</code>) when the dropdown is activated.</li></ul></li><li><strong>Popper.js Integration</strong>: <ul><li>The <code>[data-bs-popper]</code> attribute is used for positioning the dropdown using Popper.js, ensuring the dropdown is correctly aligned with the toggle element.</li></ul></li></ul><h4 id="responsive-breakpoints" tabindex="-1"><a class="header-anchor" href="#responsive-breakpoints"><span><strong>Responsive Breakpoints</strong></span></a></h4><ul><li>The SCSS includes media queries that adjust the positioning of dropdown menus based on different screen sizes or breakpoints.</li><li>It defines <code>.bt-dropdown-menu-start</code> and <code>.bt-dropdown-menu-end</code> classes that adjust the positioning to align the dropdown menu to the start (left) or end (right) based on the screen width.</li></ul><h4 id="dropdown-directions" tabindex="-1"><a class="header-anchor" href="#dropdown-directions"><span><strong>Dropdown Directions</strong></span></a></h4><ul><li><strong><code>.bt-dropup</code>, <code>.bt-dropend</code>, <code>.bt-dropstart</code></strong>: <ul><li>These classes adjust the dropdown menu&#39;s position relative to the toggle, making the menu appear above, to the right, or to the left of the toggle, respectively.</li><li>The caret direction is also adjusted using the <code>caret()</code> mixin, which changes the visual indicator of the dropdownâ€™s direction.</li></ul></li></ul><h4 id="dropdown-divider-and-items" tabindex="-1"><a class="header-anchor" href="#dropdown-divider-and-items"><span><strong>Dropdown Divider and Items</strong></span></a></h4><ul><li><strong><code>.bt-dropdown-divider</code></strong>: <ul><li>This class styles dividers within the dropdown menu, which are used to separate groups of items. It uses a solid border with customizable opacity and margin.</li></ul></li><li><strong><code>.bt-dropdown-item</code></strong>: <ul><li>This class styles individual items in the dropdown, including links and buttons.</li><li>It handles padding, text alignment, color, and background, and includes hover, active, and disabled states with appropriate styles.</li></ul></li><li><strong><code>.bt-dropdown-header</code></strong> and <strong><code>.bt-dropdown-item-text</code></strong>: <ul><li>These classes style headers and text items within the dropdown menu, providing additional structure and content within the dropdown.</li></ul></li></ul><h4 id="dark-mode-support" tabindex="-1"><a class="header-anchor" href="#dark-mode-support"><span><strong>Dark Mode Support</strong></span></a></h4><ul><li><strong><code>.bt-dropdown-menu-dark</code></strong>: <ul><li>This class provides an alternative dark-themed dropdown menu.</li><li>It overrides the default variables with darker colors for the background, text, borders, and interactive states, ensuring the dropdown is visually consistent with dark UI themes.</li></ul></li></ul>',12),s=[i];function r(a,l){return t(),o("div",null,s)}const p=e(n,[["render",r],["__file","dropdown.html.vue"]]),h=JSON.parse('{"path":"/components/dropdown.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1723025168000,"contributors":[{"name":"Ehsan","email":"ehsan.k93@gmail.com","commits":1}]},"filePathRelative":"components/dropdown.md"}');export{p as comp,h as data};
