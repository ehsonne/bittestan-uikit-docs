import{_ as n,c as s,o as a,a as e}from"./app-Cm3qpj-w.js";const t={},i=e(`<h1 id="transition-scss-documentation" tabindex="-1"><a class="header-anchor" href="#transition-scss-documentation"><span><code>transition.scss</code> Documentation</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <code>transition.scss</code> file provides a mixin for applying CSS transitions with options for reduced motion settings. This mixin allows you to define transitions for different properties and handle cases where the user prefers reduced motion.</p><h2 id="mixins" tabindex="-1"><a class="header-anchor" href="#mixins"><span>Mixins</span></a></h2><h3 id="transition" tabindex="-1"><a class="header-anchor" href="#transition"><span><code>transition</code></span></a></h3><p>Applies CSS transitions to an element. You can specify multiple transition properties and durations. The mixin also supports handling reduced motion preferences.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><ul><li><strong><code>$transition...</code></strong>: One or more transition properties, such as <code>transition: property duration timing-function delay;</code>. If no arguments are provided, the mixin defaults to using <code>$transition-base</code>.</li></ul><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@mixin</span> <span class="token function">transition</span><span class="token punctuation">(</span><span class="token variable">$transition</span>...<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@if</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$transition</span><span class="token punctuation">)</span><span class="token selector">==0 </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property"><span class="token variable">$transition</span></span><span class="token punctuation">:</span> <span class="token variable">$transition-base</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">@if</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$transition</span><span class="token punctuation">)</span><span class="token selector">&gt;1 </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$value</span> in <span class="token variable">$transition</span> </span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$value</span> ==null or <span class="token variable">$value</span> ==none </span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">@warn</span> <span class="token string">&quot;The keyword &#39;none&#39; or &#39;null&#39; must be used as a single argument.&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$enable-transitions</span> </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">@if</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$transition</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> <span class="token selector">!=null </span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token variable">$transition</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">@if</span> <span class="token variable">$enable-reduced-motion</span> <span class="token operator">and</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$transition</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> !=<span class="token null keyword">null</span> <span class="token operator">and</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$transition</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> <span class="token selector">!=none </span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-reduced-motion</span><span class="token punctuation">:</span> reduce<span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">transition</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Usage Example:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token selector">.button </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@include</span> <span class="token function">transition</span><span class="token punctuation">(</span>all 0.3s ease-in-out<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.card </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@include</span> <span class="token function">transition</span><span class="token punctuation">(</span>transform 0.5s ease-in-out<span class="token punctuation">,</span> opacity 0.5s ease-in-out<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Notes:</strong></p><ul><li>If no arguments are provided, the mixin defaults to <code>$transition-base</code>, which should be defined elsewhere in your styles.</li><li>The mixin handles cases where the user prefers reduced motion by applying <code>transition: none</code> if the <code>prefers-reduced-motion</code> media query is active.</li><li>Use the <code>@warn</code> directive to alert if <code>none</code> or <code>null</code> is provided as a single argument, as it is not valid in this context.</li></ul><p>This mixin ensures that transitions are applied consistently and respects user preferences for reduced motion.</p>`,15),p=[i];function o(l,c){return a(),s("div",null,p)}const u=n(t,[["render",o],["__file","transition.html.vue"]]),d=JSON.parse('{"path":"/mixins/transition.html","title":"transition.scss Documentation","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Mixins","slug":"mixins","link":"#mixins","children":[{"level":3,"title":"transition","slug":"transition","link":"#transition","children":[]}]}],"git":{"updatedTime":1723029969000,"contributors":[{"name":"Ehsan","email":"ehsan.k93@gmail.com","commits":1}]},"filePathRelative":"mixins/transition.md"}');export{u as comp,d as data};
