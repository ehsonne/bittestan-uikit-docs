import{_ as a,c as s,o as n,a as e}from"./app-Cm3qpj-w.js";const t={},i=e(`<h1 id="functions-scss-documentation" tabindex="-1"><a class="header-anchor" href="#functions-scss-documentation"><span><code>functions.scss</code> Documentation</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <code>functions.scss</code> file contains various utility functions and mixins used throughout the UI kit. These functions provide essential operations for color manipulation, map evaluation, and mathematical calculations.</p><h2 id="mixins" tabindex="-1"><a class="header-anchor" href="#mixins"><span>Mixins</span></a></h2><h3 id="assert-ascending" tabindex="-1"><a class="header-anchor" href="#assert-ascending"><span><code>_assert-ascending</code></span></a></h3><p>Ensures that a Sass map is sorted in ascending order based on its values.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><ul><li><strong><code>$map</code></strong>: The Sass map to be checked.</li><li><strong><code>$map-name</code></strong>: The name of the map, used in warning messages.</li></ul><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@mixin</span> _<span class="token function">assert-ascending</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> <span class="token variable">$map-name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="assert-starts-at-zero" tabindex="-1"><a class="header-anchor" href="#assert-starts-at-zero"><span><code>_assert-starts-at-zero</code></span></a></h3><p>Ensures that the smallest value in a map starts at zero.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><ul><li><strong><code>$map</code></strong>: The Sass map to be checked.</li><li><strong><code>$map-name</code></strong>: The name of the map (default is <code>$grid-breakpoints</code>).</li></ul><h4 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@mixin</span> _<span class="token function">assert-starts-at-zero</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$map-name</span></span><span class="token punctuation">:</span> <span class="token string">&quot;$grid-breakpoints&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h2><h3 id="to-rgb" tabindex="-1"><a class="header-anchor" href="#to-rgb"><span><code>to-rgb</code></span></a></h3><p>Converts a color value to its RGB components.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><ul><li><strong><code>$value</code></strong>: The color value to convert.</li></ul><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><ul><li>A list of RGB components.</li></ul><h4 id="usage-2" tabindex="-1"><a class="header-anchor" href="#usage-2"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">to-rgb</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@return</span> <span class="token function">red</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">green</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">blue</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rgba-css-var" tabindex="-1"><a class="header-anchor" href="#rgba-css-var"><span><code>rgba-css-var</code></span></a></h3><p>Generates an RGBA color value from CSS variables.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><ul><li><strong><code>$identifier</code></strong>: The identifier for the color (e.g., &quot;body&quot;).</li><li><strong><code>$target</code></strong>: The target property (e.g., &quot;bg&quot; for background).</li></ul><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><ul><li>An <code>rgba</code> color value.</li></ul><h4 id="usage-3" tabindex="-1"><a class="header-anchor" href="#usage-3"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">rgba-css-var</span><span class="token punctuation">(</span><span class="token variable">$identifier</span><span class="token punctuation">,</span> <span class="token variable">$target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-loop" tabindex="-1"><a class="header-anchor" href="#map-loop"><span><code>map-loop</code></span></a></h3><p>Applies a function to each key-value pair in a Sass map.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><ul><li><strong><code>$map</code></strong>: The map to iterate over.</li><li><strong><code>$func</code></strong>: The function to apply.</li><li><strong><code>$args...</code></strong>: Additional arguments to pass to the function.</li></ul><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><ul><li>A map with the results of the function applied.</li></ul><h4 id="usage-4" tabindex="-1"><a class="header-anchor" href="#usage-4"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">map-loop</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span>...<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="varify" tabindex="-1"><a class="header-anchor" href="#varify"><span><code>varify</code></span></a></h3><p>Generates a list of CSS variables from a list of variable names.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><ul><li><strong><code>$list</code></strong>: A list of variable names.</li></ul><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><ul><li>A list of CSS variable values.</li></ul><h4 id="usage-5" tabindex="-1"><a class="header-anchor" href="#usage-5"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">varify</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="negativify-map" tabindex="-1"><a class="header-anchor" href="#negativify-map"><span><code>negativify-map</code></span></a></h3><p>Creates a negative variant of a map, prefixing keys with <code>n</code> and negating values.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><ul><li><strong><code>$map</code></strong>: The map to be transformed.</li></ul><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><ul><li>A new map with negative values.</li></ul><h4 id="usage-6" tabindex="-1"><a class="header-anchor" href="#usage-6"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">negativify-map</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-get-multiple" tabindex="-1"><a class="header-anchor" href="#map-get-multiple"><span><code>map-get-multiple</code></span></a></h3><p>Retrieves multiple keys from a Sass map.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><ul><li><strong><code>$map</code></strong>: The map to retrieve values from.</li><li><strong><code>$values</code></strong>: A list of keys to retrieve.</li></ul><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><ul><li>A map with the retrieved key-value pairs.</li></ul><h4 id="usage-7" tabindex="-1"><a class="header-anchor" href="#usage-7"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">map-get-multiple</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">,</span> <span class="token variable">$values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-merge-multiple" tabindex="-1"><a class="header-anchor" href="#map-merge-multiple"><span><code>map-merge-multiple</code></span></a></h3><p>Merges multiple maps into one.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><ul><li><strong><code>$maps...</code></strong>: Maps to be merged.</li></ul><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><ul><li>A merged map.</li></ul><h4 id="usage-8" tabindex="-1"><a class="header-anchor" href="#usage-8"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">map-merge-multiple</span><span class="token punctuation">(</span><span class="token variable">$maps</span>...<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="str-replace" tabindex="-1"><a class="header-anchor" href="#str-replace"><span><code>str-replace</code></span></a></h3><p>Replaces substrings within a string.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><ul><li><strong><code>$string</code></strong>: The original string.</li><li><strong><code>$search</code></strong>: The substring to replace.</li><li><strong><code>$replace</code></strong>: The replacement string (default is an empty string).</li></ul><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><ul><li>The updated string.</li></ul><h4 id="usage-9" tabindex="-1"><a class="header-anchor" href="#usage-9"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">str-replace</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token variable">$search</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$replace</span></span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="escape-svg" tabindex="-1"><a class="header-anchor" href="#escape-svg"><span><code>escape-svg</code></span></a></h3><p>Escapes characters in SVG data URIs.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><ul><li><strong><code>$string</code></strong>: The SVG string to escape.</li></ul><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><ul><li>The escaped SVG string.</li></ul><h4 id="usage-10" tabindex="-1"><a class="header-anchor" href="#usage-10"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">escape-svg</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="color-contrast" tabindex="-1"><a class="header-anchor" href="#color-contrast"><span><code>color-contrast</code></span></a></h3><p>Determines the best color for contrast against a given background.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><ul><li><strong><code>$background</code></strong>: The background color.</li><li><strong><code>$color-contrast-dark</code></strong>: Color for dark text (default is <code>$color-contrast-dark</code>).</li><li><strong><code>$color-contrast-light</code></strong>: Color for light text (default is <code>$color-contrast-light</code>).</li><li><strong><code>$min-contrast-ratio</code></strong>: Minimum contrast ratio (default is <code>$min-contrast-ratio</code>).</li></ul><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><ul><li>The best color for the specified contrast ratio.</li></ul><h4 id="usage-11" tabindex="-1"><a class="header-anchor" href="#usage-11"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">color-contrast</span><span class="token punctuation">(</span><span class="token variable">$background</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$color-contrast-dark</span></span><span class="token punctuation">:</span> <span class="token variable">$color-contrast-dark</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$color-contrast-light</span></span><span class="token punctuation">:</span> <span class="token variable">$color-contrast-light</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$min-contrast-ratio</span></span><span class="token punctuation">:</span> <span class="token variable">$min-contrast-ratio</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contrast-ratio" tabindex="-1"><a class="header-anchor" href="#contrast-ratio"><span><code>contrast-ratio</code></span></a></h3><p>Calculates the contrast ratio between two colors.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><ul><li><strong><code>$background</code></strong>: The background color.</li><li><strong><code>$foreground</code></strong>: The foreground color (default is <code>$color-contrast-light</code>).</li></ul><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><ul><li>The contrast ratio.</li></ul><h4 id="usage-12" tabindex="-1"><a class="header-anchor" href="#usage-12"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">contrast-ratio</span><span class="token punctuation">(</span><span class="token variable">$background</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$foreground</span></span><span class="token punctuation">:</span> <span class="token variable">$color-contrast-light</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="luminance" tabindex="-1"><a class="header-anchor" href="#luminance"><span><code>luminance</code></span></a></h3><p>Calculates the relative luminance of a color.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><ul><li><strong><code>$color</code></strong>: The color to analyze.</li></ul><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><ul><li>The relative luminance of the color.</li></ul><h4 id="usage-13" tabindex="-1"><a class="header-anchor" href="#usage-13"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">luminance</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opaque" tabindex="-1"><a class="header-anchor" href="#opaque"><span><code>opaque</code></span></a></h3><p>Calculates an opaque color by mixing a foreground color with a background color.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><ul><li><strong><code>$background</code></strong>: The background color.</li><li><strong><code>$foreground</code></strong>: The foreground color with opacity.</li></ul><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><ul><li>The resulting opaque color.</li></ul><h4 id="usage-14" tabindex="-1"><a class="header-anchor" href="#usage-14"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">opaque</span><span class="token punctuation">(</span><span class="token variable">$background</span><span class="token punctuation">,</span> <span class="token variable">$foreground</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tint-color" tabindex="-1"><a class="header-anchor" href="#tint-color"><span><code>tint-color</code></span></a></h3><p>Tints a color by mixing it with white.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h4><ul><li><strong><code>$color</code></strong>: The color to tint.</li><li><strong><code>$weight</code></strong>: The weight of the tint.</li></ul><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><ul><li>The tinted color.</li></ul><h4 id="usage-15" tabindex="-1"><a class="header-anchor" href="#usage-15"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">tint-color</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$weight</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shade-color" tabindex="-1"><a class="header-anchor" href="#shade-color"><span><code>shade-color</code></span></a></h3><p>Shades a color by mixing it with black.</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16"><span>Parameters</span></a></h4><ul><li><strong><code>$color</code></strong>: The color to shade.</li><li><strong><code>$weight</code></strong>: The weight of the shade.</li></ul><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><ul><li>The shaded color.</li></ul><h4 id="usage-16" tabindex="-1"><a class="header-anchor" href="#usage-16"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">shade-color</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$weight</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shift-color" tabindex="-1"><a class="header-anchor" href="#shift-color"><span><code>shift-color</code></span></a></h3><p>Shifts a color by either shading or tinting it based on the weight.</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17"><span>Parameters</span></a></h4><ul><li><strong><code>$color</code></strong>: The color to shift.</li><li><strong><code>$weight</code></strong>: The weight of the shift.</li></ul><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><ul><li>The shifted color.</li></ul><h4 id="usage-17" tabindex="-1"><a class="header-anchor" href="#usage-17"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">shift-color</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$weight</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span><code>add</code></span></a></h3><p>Adds two values together, handling different units and calculations.</p><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18"><span>Parameters</span></a></h4><ul><li><strong><code>$value1</code></strong>: The first value.</li><li><strong><code>$value2</code></strong>: The second value.</li><li><strong><code>$return-calc</code></strong>: Boolean to determine if the result should be returned as a <code>calc()</code> expression (default is <code>true</code>).</li></ul><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><ul><li>The sum of the values.</li></ul><h4 id="usage-18" tabindex="-1"><a class="header-anchor" href="#usage-18"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token variable">$value1</span><span class="token punctuation">,</span> <span class="token variable">$value2</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$return-calc</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subtract" tabindex="-1"><a class="header-anchor" href="#subtract"><span><code>subtract</code></span></a></h3><p>Subtracts one value from another, handling different units and calculations.</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19"><span>Parameters</span></a></h4><ul><li><strong><code>$value1</code></strong>: The value to subtract from.</li><li><strong><code>$value2</code></strong>: The value to subtract.</li><li><strong><code>$return-calc</code></strong>: Boolean to determine if the result should be returned as a <code>calc()</code> expression (default is <code>true</code>).</li></ul><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h4><ul><li>The difference between the values.</li></ul><h4 id="usage-19" tabindex="-1"><a class="header-anchor" href="#usage-19"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token variable">$value1</span><span class="token punctuation">,</span> <span class="token variable">$value2</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$return-calc</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="divide" tabindex="-1"><a class="header-anchor" href="#divide"><span><code>divide</code></span></a></h3><p>Divides one value by another, handling precision and units.</p><h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20"><span>Parameters</span></a></h4><ul><li><strong><code>$dividend</code></strong>: The value to be divided.</li><li><strong><code>$divisor</code></strong>: The value to divide by.</li><li><strong><code>$precision</code></strong>: The precision for the division (default is <code>10</code>).</li></ul><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h4><ul><li>The result of the division.</li></ul><h4 id="usage-20" tabindex="-1"><a class="header-anchor" href="#usage-20"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token variable">$dividend</span><span class="token punctuation">,</span> <span class="token variable">$divisor</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$precision</span></span><span class="token punctuation">:</span> 10<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implementation</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,169),l=[i];function c(r,o){return n(),s("div",null,l)}const d=a(t,[["render",c],["__file","functions.html.vue"]]),u=JSON.parse('{"path":"/styles/functions.html","title":"functions.scss Documentation","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Mixins","slug":"mixins","link":"#mixins","children":[{"level":3,"title":"_assert-ascending","slug":"assert-ascending","link":"#assert-ascending","children":[]},{"level":3,"title":"_assert-starts-at-zero","slug":"assert-starts-at-zero","link":"#assert-starts-at-zero","children":[]}]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[{"level":3,"title":"to-rgb","slug":"to-rgb","link":"#to-rgb","children":[]},{"level":3,"title":"rgba-css-var","slug":"rgba-css-var","link":"#rgba-css-var","children":[]},{"level":3,"title":"map-loop","slug":"map-loop","link":"#map-loop","children":[]},{"level":3,"title":"varify","slug":"varify","link":"#varify","children":[]},{"level":3,"title":"negativify-map","slug":"negativify-map","link":"#negativify-map","children":[]},{"level":3,"title":"map-get-multiple","slug":"map-get-multiple","link":"#map-get-multiple","children":[]},{"level":3,"title":"map-merge-multiple","slug":"map-merge-multiple","link":"#map-merge-multiple","children":[]},{"level":3,"title":"str-replace","slug":"str-replace","link":"#str-replace","children":[]},{"level":3,"title":"escape-svg","slug":"escape-svg","link":"#escape-svg","children":[]},{"level":3,"title":"color-contrast","slug":"color-contrast","link":"#color-contrast","children":[]},{"level":3,"title":"contrast-ratio","slug":"contrast-ratio","link":"#contrast-ratio","children":[]},{"level":3,"title":"luminance","slug":"luminance","link":"#luminance","children":[]},{"level":3,"title":"opaque","slug":"opaque","link":"#opaque","children":[]},{"level":3,"title":"tint-color","slug":"tint-color","link":"#tint-color","children":[]},{"level":3,"title":"shade-color","slug":"shade-color","link":"#shade-color","children":[]},{"level":3,"title":"shift-color","slug":"shift-color","link":"#shift-color","children":[]},{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"subtract","slug":"subtract","link":"#subtract","children":[]},{"level":3,"title":"divide","slug":"divide","link":"#divide","children":[]}]}],"git":{"updatedTime":1723068609000,"contributors":[{"name":"Ehsan","email":"ehsan.k93@gmail.com","commits":1}]},"filePathRelative":"styles/_functions.md"}');export{d as comp,u as data};
