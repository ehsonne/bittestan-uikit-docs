import{_ as s,c as e,o as n,a}from"./app-Cm3qpj-w.js";const t={},c=a(`<h1 id="color-scheme-scss-documentation" tabindex="-1"><a class="header-anchor" href="#color-scheme-scss-documentation"><span><code>color-scheme.scss</code> Documentation</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <code>color-scheme.scss</code> file provides a mixin for applying styles based on the user&#39;s preferred color scheme. This is useful for creating responsive designs that adapt to light and dark mode preferences.</p><h2 id="mixins" tabindex="-1"><a class="header-anchor" href="#mixins"><span>Mixins</span></a></h2><h3 id="color-scheme-name" tabindex="-1"><a class="header-anchor" href="#color-scheme-name"><span><code>color-scheme($name)</code></span></a></h3><p>Applies styles based on the user&#39;s preferred color scheme.</p><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@mixin</span> <span class="token function">color-scheme</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> <span class="token variable">#{$name}</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">@content</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters:</strong></p><ul><li><code>$name</code>: The color scheme to target. Options are <code>light</code> and <code>dark</code>.</li></ul><p><strong>Usage Examples:</strong></p><ol><li><p><strong>Applying Styles for Dark Mode:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@include</span> <span class="token function">color-scheme</span><span class="token punctuation">(</span>dark<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will apply dark mode styles when the user&#39;s system preference is set to dark mode.</p></li><li><p><strong>Applying Styles for Light Mode:</strong></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@include</span> <span class="token function">color-scheme</span><span class="token punctuation">(</span>light<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will apply light mode styles when the user&#39;s system preference is set to light mode.</p></li></ol><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><ul><li>The mixin uses the <code>prefers-color-scheme</code> media feature to target the user&#39;s system color scheme preference.</li><li>Ensure that the <code>$name</code> parameter matches either <code>light</code> or <code>dark</code> to apply the correct styles based on the user&#39;s preference.</li></ul>`,14),o=[c];function l(i,p){return n(),e("div",null,o)}const d=s(t,[["render",l],["__file","color-scheme.html.vue"]]),u=JSON.parse('{"path":"/mixins/color-scheme.html","title":"color-scheme.scss Documentation","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Mixins","slug":"mixins","link":"#mixins","children":[{"level":3,"title":"color-scheme($name)","slug":"color-scheme-name","link":"#color-scheme-name","children":[]}]},{"level":2,"title":"Notes","slug":"notes","link":"#notes","children":[]}],"git":{"updatedTime":1723029969000,"contributors":[{"name":"Ehsan","email":"ehsan.k93@gmail.com","commits":1}]},"filePathRelative":"mixins/color-scheme.md"}');export{d as comp,u as data};
